server {
	server_name	_;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri$args $uri$args/ /index.html;
	}

	location ~* \.(eot|otf|ttf|woff|woff2)$ {
    		add_header Access-Control-Allow-Origin *;
	}


        location = /rest/subscriptions {
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://127.0.0.1:8080/subscriptions;
            #proxy_pass http://websocket/subscriptions;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Upgrade "websocket";
            proxy_set_header Connection "Upgrade";
            proxy_read_timeout 30s;
            
            access_log /var/log/nginx/ws-access.log;
            error_log /var/log/nginx/ws-error.log;
        }

	location = /rest/auth/github_login {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/github_login;
        }

        location = /rest/auth/github_login_auth {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/github_login_auth$is_args$args;
        }
        location = /rest/agent/scan-request/submit {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/agent/scan-request/submit;
        }
	location = /rest/agent/scan-request/proxylogs {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/agent/scan-request/proxylogs;
        }
	location = /rest/agent/scan-request/logs {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/agent/scan-request/logs;
        }
        location = /rest/agent/scan-request/proxyScanRequest {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/agent/scan-request/proxyScanRequest;
        }
        location ^~ /rest/agent/scan-request/get-result/ {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/agent/scan-request/get-result/;
        }
        location = /rest/user {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/user;
        }
        location = /graphql {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/graphql;
        }
        location = /rest/auth/authenticate {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/authenticate$is_args$args;
        }
        location = /rest/auth/bitbucket_login {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/bitbucket_login;
        }
        location = /rest/auth/bitbucket_login_auth {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/bitbucket_login_auth$is_args$args;
        }
        location = /rest/auth/gitlab_login {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/gitlab_login;
        }
        location = /rest/auth/gitlab_login_auth {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/gitlab_login_auth$is_args$args;
        }

        location = /account/invite_org {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/account/invite_org$is_args$args;
        }


        location = /rest/report/vulnerability-state-report {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/report/vulnerability-state-report$is_args$args;
        }

        location = /rest/report/license-state-report {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/report/license-state-report$is_args$args;
        }


        location = rest/quickstart/project/upload {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/quickstart/project/upload$is_args$args;
        }

        # new endpoints
        location = /rest/graphql/graphql_schema {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/graphql/graphql_schema;
        }

        location = /rest/auth/okta_saml_login {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://127.0.0.1:8080/rest/auth/okta_saml_login;
        }

	listen 80 default_server;
        listen [::]:80 default_server;
	
 	#listen [::]:443 ssl ipv6only=on;
        #listen 443 ssl;
        #ssl_certificate /etc/nginx/ssl/fullchain.pem;
        #ssl_certificate_key /etc/nginx/ssl/privkey.pem;
}

#server {
#        listen 80 default_server;
#        listen [::]:80 default_server;
#        server_name _;
#        return 301 https://$host$request_uri;
#}

